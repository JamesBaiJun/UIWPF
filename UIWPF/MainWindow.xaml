<Window x:Class="UIWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:local="clr-namespace:UIWPF"
        mc:Ignorable="d"
        TextElement.FontFamily="{StaticResource ZiYuan}"
        TextElement.Foreground="{DynamicResource TextForeground}"
        Title="MainWindow" WindowStyle="None" AllowsTransparency="True" ResizeMode="CanResizeWithGrip" Height="800" Width="1200">
    <Window.Resources>
        <Style x:Key="ToggleButton.Base" TargetType="ToggleButton">
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Margin" Value="4" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="bd" Background="Transparent" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="bd" Value="{DynamicResource MarkBackground}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PrimaryFocuseForeground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButton.Base}"/>
        <Style TargetType="RadioButton" BasedOn="{StaticResource ToggleButton.Base}"/>

        <Style TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="bd" Background="Transparent">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="bd" Value="{DynamicResource PrimaryFocuseForeground}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IconButton" TargetType="Button">
            <Setter Property="Margin" Value="8 0"/>
            <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value=".8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Margin" Value="8 0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{DynamicResource PrimaryFocuseForeground}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value=".8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value=".6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Background="{DynamicResource PrimaryBackground}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"/>
            <ColumnDefinition MaxWidth="300" MinWidth="200"/>
            <ColumnDefinition Width="2.5*"/>
        </Grid.ColumnDefinitions>

        <Ellipse Grid.ColumnSpan="3" Fill="#202020" RenderTransformOrigin="0.5,0.5" Margin="30" 
                 HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="1" Height="1">
            <Ellipse.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="BackEllipseScale"/>
                </TransformGroup>
            </Ellipse.RenderTransform>

            <Ellipse.Style>
                <Style TargetType="Ellipse">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ThemeToggle,Path=IsChecked}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.5" To="3500" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.5" To="3500" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.5" To="0" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Duration="0:0:0.5" To="0" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Ellipse.Style>
        </Ellipse>
        <Grid>
            <DockPanel LastChildFill="False" Margin="0 8">
                <Image Source="Koala.jpg" DockPanel.Dock="Top" RenderOptions.BitmapScalingMode="Fant" Stretch="UniformToFill" Width="40" Height="40" Margin="4,16">
                    <Image.Clip>
                        <EllipseGeometry Center="20,20" RadiusX="20" RadiusY="20"/>
                    </Image.Clip>
                </Image>
                <RadioButton DockPanel.Dock="Top" IsChecked="True">
                    <icon:PackIconMaterial Kind="AccountCircle" Width="28" Height="28"/>
                </RadioButton>
                <RadioButton DockPanel.Dock="Top">
                    <icon:PackIconMaterial Kind="CloudCircle" Width="28" Height="28"/>
                </RadioButton>
                <RadioButton DockPanel.Dock="Top">
                    <icon:PackIconMaterial Kind="FireCircle" Width="28" Height="28"/>
                </RadioButton>
                <ToggleButton x:Name="ThemeToggle" Checked="ThemeToggle_Checked" Unchecked="ThemeToggle_Unchecked" DockPanel.Dock="Bottom">
                    <icon:PackIconMaterial Kind="ThemeLightDark" Width="28" Height="28"/>
                </ToggleButton>
            </DockPanel>
        </Grid>

        <Grid Grid.Column="1" Background="{DynamicResource MarkBackground}">
            <ListBox Padding="0 24" BorderThickness="0" Background="Transparent" TextElement.Foreground="{DynamicResource TextForeground}">
                <ListBoxItem Padding="8" FontSize="18" Margin="0 4" IsEnabled="False">好友管理</ListBoxItem>
                <ListBoxItem Padding="8" FontSize="14">朋友</ListBoxItem>
                <ListBoxItem Padding="8" FontSize="14">同学</ListBoxItem>
                <ListBoxItem Padding="8" FontSize="14">家人</ListBoxItem>
                <ListBoxItem Padding="8" FontSize="14">陌生人</ListBoxItem>
                <ListBoxItem Padding="8" FontSize="14">黑名单</ListBoxItem>
            </ListBox>
        </Grid>

        <GridSplitter Grid.Column="1" Margin="0 0 -2.5 0" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Stretch" Width="5"/>

        <Grid Grid.Column="2" Margin="0 10 0 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="30"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <DockPanel Margin="8" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" Text="QQ" FontSize="20" VerticalAlignment="Center"/>
                    <Ellipse Width="16" Height="16" Margin="4 0 0 2" Fill="#68FA93" VerticalAlignment="Center"/>

                    <Button DockPanel.Dock="Right" Style="{StaticResource IconButton}">
                        <TextBlock  Text="..." Margin="0 -10 0 0" FontSize="20" VerticalAlignment="Center"/>
                    </Button>
                    <Button DockPanel.Dock="Right" Margin="4 0" Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="ChatPlus"  VerticalAlignment="Center" Width="20" Height="20"/>
                    </Button>
                </DockPanel>

                <Grid Grid.Row="1">
                    <ItemsControl ItemsSource="{Binding Messages}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="60"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="Lighthouse.jpg" RenderOptions.BitmapScalingMode="Fant" Width="40" Height="40" Stretch="UniformToFill">
                                        <Image.Clip>
                                            <EllipseGeometry Center="20,20" RadiusX="20" RadiusY="20"/>
                                        </Image.Clip>
                                    </Image>

                                    <StackPanel Grid.Column="1" HorizontalAlignment="Left">
                                        <TextBlock Text="{Binding Item1}" Margin="2" Opacity="0.6"/>
                                        <Border Background="{DynamicResource MarkBackground}" Padding="4 8" CornerRadius="4">
                                            <TextBox Foreground="{DynamicResource TextForeground}" Text="{Binding Item2,Mode=OneWay}" VerticalContentAlignment="Center" IsReadOnly="True" Background="Transparent" BorderThickness="0"/>
                                        </Border>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>

            <Grid Grid.Row="1">
                <DockPanel LastChildFill="False" Margin="8 4">
                    <Button Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="Emoticon"/>
                    </Button>
                    <Button Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="Clipboard"/>
                    </Button>
                    <Button Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="Folder"/>
                    </Button>
                    <Button Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="Image"/>
                    </Button>
                    <Button Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="PhoneAlert"/>
                    </Button>
                    <Button Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="Microphone"/>
                    </Button>

                    <Button DockPanel.Dock="Right" Style="{StaticResource IconButton}">
                        <icon:PackIconMaterial Kind="Clock"/>
                    </Button>
                </DockPanel>
            </Grid>

            <Grid Grid.Row="2">
                <TextBox Background="Transparent" Foreground="{DynamicResource TextForeground}" AcceptsReturn="True" BorderThickness="0" Padding="12 8" Margin="0 0 0 44"/>

                <Button VerticalAlignment="Bottom" HorizontalAlignment="Right" Content="发送" Margin="8" Width="80" Height="28"/>
            </Grid>
        </Grid>

        <Grid x:Name="topBar" Grid.ColumnSpan="3" MouseLeftButtonDown="topBar_MouseLeftButtonDown" VerticalAlignment="Top" Height="28" Background="Transparent">
      
        </Grid>
    </Grid>
</Window>
